{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","id","images","downsized_medium","console","log","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","GifExpertApp","categories","catecory","ReactDOM","render","document","getElementById"],"mappings":"mMAkCeA,EA/BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAEnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCGhBG,EATK,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACzB,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,kCAAKA,EAAL,W,uBCaGK,EAnBF,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAENN,EAFM,iDAE2CO,UAAUF,GAFrD,+DAGOG,MAAMR,GAHb,cAGNS,EAHM,gBAIWA,EAAKC,OAJhB,uBAIJC,EAJI,EAIJA,KAEFC,EAAOD,EAAKE,KAAI,YAClB,MAAO,CACHC,GAFwE,EAAvDA,GAGjBf,MAHwE,EAAnDA,MAIrBC,IAJwE,EAA5Ce,OAAUC,iBAAoBhB,QAQlEiB,QAAQC,IAAIN,GAdA,kBAeLA,GAfK,4CAAH,sDC0BEO,EAvBC,SAAC,GAAkB,IAAhBd,EAAe,EAAfA,SAEhB,ECFyB,SAACA,GACzB,MAA0BpB,mBAAS,CAC/B0B,KAAM,GACNS,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACNnB,EAAQC,GAAUmB,MAAK,SAAAC,GACnBH,EAAS,CACLX,KAAMc,EACNL,SAAS,SAGlB,IAEIC,EDbsBK,CAAarB,GAA/BU,EAAZ,EAAOJ,KAAYS,EAAnB,EAAmBA,QAIlB,OACI,qCACI,oBAAInB,UAAU,oCAAd,SAAoDI,IAElDe,GAAW,mBAAGnB,UAAU,mCAAb,wBAEb,qBAAKA,UAAU,YAAf,SAEQc,EAAOF,KAAK,SAACc,GAAD,OACZ,cAAC,EAAD,eAA8BA,GAAZA,EAAIb,aES3Bc,EAvBM,WAEjB,MAAoC3C,mBAAS,CAAC,kBAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACI,qCACI,8CAEA,cAAC,EAAD,CAAaA,cAAiBA,IAE9B,uBAEA,6BAEQ6C,EAAWhB,KAAK,SAAAiB,GAAQ,OACpB,cAAC,EAAD,CAAwBzB,SAAUyB,GAApBA,Y,MCbtCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f4c35a07.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ( {setCategories} ) => {\n\n    const [inputValue, setinputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setinputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(inputValue.trim().length>2){\n            setCategories( cats =>  [inputValue, ...cats]);\n            setinputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories : PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","import React from 'react'\n\nconst GifGridItem = ({title, url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p> {title} </p> \n        </div>\n    )\n}\n\nexport default GifGridItem\n","const getGifs = async(category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=UxmYZDTYVH2Kh3xhAqnrfBowiL7X5x9r`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map(({ id, title, images: { downsized_medium: { url } } }) => {\n        return {\n            id,\n            title,\n            url\n        }\n    })\n\n    console.log(gifs);\n    return gifs;\n\n}\n\nexport default getGifs;","import GifGridItem from './GifGridItem';\nimport {useFetchGifs} from '../hooks/useFetchGifs';\n\nconst GifGrid = ( {category} ) => {\n\n   const {data:images,loading} = useFetchGifs(category);\n\n    \n    \n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{ category}</h3> \n\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\n\n            <div className=\"card-grid\">                                    \n                {\n                    images.map( (img) => (\n                    <GifGridItem key={img.id} {...img} />\n                    ))\n                    }   \n            </div>\n        </>\n    )\n}\n\nexport default GifGrid\n","import { useState, useEffect } from 'react'\nimport getGifs from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect(() => {\n        getGifs(category).then(imgs => {\n            setState({\n                data: imgs,\n                loading: false\n            })\n        });\n    }, []);\n\n    return state;\n\n}","import React, { useState } from 'react'\nimport AddCategory from './AddCategory';\nimport GifGrid from './GifGrid';\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Dragon Ball Z']);\n\n    return (\n        <>\n            <h2>GifExpertAPP</h2>\n\n            <AddCategory setCategories = {setCategories}/>\n\n            <hr/>            \n\n            <ol>\n                {\n                    categories.map( catecory => (\n                        <GifGrid key={catecory} category={catecory} />\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './components/GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render( \n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}